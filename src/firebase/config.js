// Import the functions you need from the SDKs you need
import { initializeApp } from "firebase/app";
import { getFirestore, connectFirestoreEmulator } from "firebase/firestore";
import { getAnalytics } from "firebase/analytics";

// Your web app's Firebase configuration
// Las variables de entorno se cargan autom√°ticamente desde el archivo .env
const firebaseConfig = {
  apiKey: import.meta.env.VITE_FIREBASE_API_KEY,
  authDomain: import.meta.env.VITE_FIREBASE_AUTH_DOMAIN,
  projectId: import.meta.env.VITE_FIREBASE_PROJECT_ID,
  storageBucket: import.meta.env.VITE_FIREBASE_STORAGE_BUCKET,
  messagingSenderId: import.meta.env.VITE_FIREBASE_MESSAGING_SENDER_ID,
  appId: import.meta.env.VITE_FIREBASE_APP_ID,
  measurementId: import.meta.env.VITE_FIREBASE_MEASUREMENT_ID
};

// Validaci√≥n completa de configuraci√≥n
console.log('üîß [Firebase Config] Validando configuraci√≥n...');
const requiredFields = ['apiKey', 'authDomain', 'projectId', 'storageBucket', 'messagingSenderId', 'appId'];
const missingFields = requiredFields.filter(field => !firebaseConfig[field]);

if (missingFields.length > 0) {
  console.error('‚ùå [Firebase Config] Campos faltantes:', missingFields);
  console.error('üîß [Firebase Config] Configuraci√≥n actual:', firebaseConfig);
  
  // En producci√≥n, mostrar un error m√°s amigable
  if (import.meta.env.PROD) {
    console.error('üö® ERROR DE CONFIGURACI√ìN EN PRODUCCI√ìN:');
    console.error('Las variables de entorno de Firebase no est√°n configuradas en tu hosting.');
    console.error('Configura estas variables en tu plataforma de hosting:');
    console.error('VITE_FIREBASE_API_KEY, VITE_FIREBASE_AUTH_DOMAIN, etc.');
  }
  
  throw new Error(`üö® CONFIGURAR VARIABLES DE ENTORNO EN HOSTING: ${missingFields.join(', ')}`);
}

console.log('‚úÖ [Firebase Config] Configuraci√≥n v√°lida');
console.log('üìä [Firebase Config] Proyecto:', firebaseConfig.projectId);

// Initialize Firebase
let app;
try {
  app = initializeApp(firebaseConfig);
  console.log('‚úÖ [Firebase App] Inicializado correctamente');
} catch (error) {
  console.error('‚ùå [Firebase App] Error al inicializar:', error);
  throw error;
}

// Initialize Cloud Firestore and get a reference to the service
let db;
try {
  db = getFirestore(app);
  console.log('‚úÖ [Firestore] Inicializado correctamente');
  
  // En desarrollo, agregar debugging adicional
  if (import.meta.env.DEV) {
    console.log('üîß [Firestore] Modo desarrollo - Debug habilitado');
  }
} catch (error) {
  console.error('‚ùå [Firestore] Error al inicializar:', error);
  throw error;
}

export { db };

// Initialize Analytics (opcional)
// export const analytics = getAnalytics(app);

export default app;
